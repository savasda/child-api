/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, EventEmitter, TemplateRef } from '@angular/core';
import { TransferDirection, TransferItem } from './interface';
import * as ɵngcc0 from '@angular/core';
export declare class NzTransferListComponent {
    private cdr;
    direction: TransferDirection;
    titleText: string;
    showSelectAll: boolean;
    dataSource: TransferItem[];
    itemUnit: string;
    itemsUnit: string;
    filter: string;
    disabled?: boolean;
    showSearch?: boolean;
    searchPlaceholder?: string;
    notFoundContent?: string;
    filterOption?: (inputValue: string, item: TransferItem) => boolean;
    renderList: TemplateRef<void> | null;
    render: TemplateRef<void> | null;
    footer: TemplateRef<void> | null;
    readonly handleSelectAll: EventEmitter<boolean>;
    readonly handleSelect: EventEmitter<TransferItem>;
    readonly filterChange: EventEmitter<{
        direction: TransferDirection;
        value: string;
    }>;
    stat: {
        checkAll: boolean;
        checkHalf: boolean;
        checkCount: number;
        shownCount: number;
    };
    onItemSelect: (item: TransferItem) => void;
    onItemSelectAll: (status: boolean) => void;
    private updateCheckStatus;
    handleFilter(value: string): void;
    handleClear(): void;
    private matchFilter;
    constructor(cdr: ChangeDetectorRef);
    markForCheck(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTransferListComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTransferListComponent, "nz-transfer-list", ["nzTransferList"], { "direction": "direction"; "titleText": "titleText"; "showSelectAll": "showSelectAll"; "dataSource": "dataSource"; "itemUnit": "itemUnit"; "itemsUnit": "itemsUnit"; "filter": "filter"; "renderList": "renderList"; "render": "render"; "footer": "footer"; "disabled": "disabled"; "showSearch": "showSearch"; "searchPlaceholder": "searchPlaceholder"; "notFoundContent": "notFoundContent"; "filterOption": "filterOption"; }, { "handleSelectAll": "handleSelectAll"; "handleSelect": "handleSelect"; "filterChange": "filterChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmZXItbGlzdC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidHJhbnNmZXItbGlzdC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVHJhbnNmZXJEaXJlY3Rpb24sIFRyYW5zZmVySXRlbSB9IGZyb20gJy4vaW50ZXJmYWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56VHJhbnNmZXJMaXN0Q29tcG9uZW50IHtcbiAgICBwcml2YXRlIGNkcjtcbiAgICBkaXJlY3Rpb246IFRyYW5zZmVyRGlyZWN0aW9uO1xuICAgIHRpdGxlVGV4dDogc3RyaW5nO1xuICAgIHNob3dTZWxlY3RBbGw6IGJvb2xlYW47XG4gICAgZGF0YVNvdXJjZTogVHJhbnNmZXJJdGVtW107XG4gICAgaXRlbVVuaXQ6IHN0cmluZztcbiAgICBpdGVtc1VuaXQ6IHN0cmluZztcbiAgICBmaWx0ZXI6IHN0cmluZztcbiAgICBkaXNhYmxlZD86IGJvb2xlYW47XG4gICAgc2hvd1NlYXJjaD86IGJvb2xlYW47XG4gICAgc2VhcmNoUGxhY2Vob2xkZXI/OiBzdHJpbmc7XG4gICAgbm90Rm91bmRDb250ZW50Pzogc3RyaW5nO1xuICAgIGZpbHRlck9wdGlvbj86IChpbnB1dFZhbHVlOiBzdHJpbmcsIGl0ZW06IFRyYW5zZmVySXRlbSkgPT4gYm9vbGVhbjtcbiAgICByZW5kZXJMaXN0OiBUZW1wbGF0ZVJlZjx2b2lkPiB8IG51bGw7XG4gICAgcmVuZGVyOiBUZW1wbGF0ZVJlZjx2b2lkPiB8IG51bGw7XG4gICAgZm9vdGVyOiBUZW1wbGF0ZVJlZjx2b2lkPiB8IG51bGw7XG4gICAgcmVhZG9ubHkgaGFuZGxlU2VsZWN0QWxsOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XG4gICAgcmVhZG9ubHkgaGFuZGxlU2VsZWN0OiBFdmVudEVtaXR0ZXI8VHJhbnNmZXJJdGVtPjtcbiAgICByZWFkb25seSBmaWx0ZXJDaGFuZ2U6IEV2ZW50RW1pdHRlcjx7XG4gICAgICAgIGRpcmVjdGlvbjogVHJhbnNmZXJEaXJlY3Rpb247XG4gICAgICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgfT47XG4gICAgc3RhdDoge1xuICAgICAgICBjaGVja0FsbDogYm9vbGVhbjtcbiAgICAgICAgY2hlY2tIYWxmOiBib29sZWFuO1xuICAgICAgICBjaGVja0NvdW50OiBudW1iZXI7XG4gICAgICAgIHNob3duQ291bnQ6IG51bWJlcjtcbiAgICB9O1xuICAgIG9uSXRlbVNlbGVjdDogKGl0ZW06IFRyYW5zZmVySXRlbSkgPT4gdm9pZDtcbiAgICBvbkl0ZW1TZWxlY3RBbGw6IChzdGF0dXM6IGJvb2xlYW4pID0+IHZvaWQ7XG4gICAgcHJpdmF0ZSB1cGRhdGVDaGVja1N0YXR1cztcbiAgICBoYW5kbGVGaWx0ZXIodmFsdWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgaGFuZGxlQ2xlYXIoKTogdm9pZDtcbiAgICBwcml2YXRlIG1hdGNoRmlsdGVyO1xuICAgIGNvbnN0cnVjdG9yKGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG1hcmtGb3JDaGVjaygpOiB2b2lkO1xufVxuIl19