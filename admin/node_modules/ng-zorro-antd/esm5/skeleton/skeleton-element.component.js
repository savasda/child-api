/**
 * @fileoverview added by tsickle
 * Generated from: skeleton-element.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, Component, Directive, Input } from '@angular/core';
var NzSkeletonElementDirective = /** @class */ (function () {
    function NzSkeletonElementDirective() {
        this.nzActive = false;
    }
    NzSkeletonElementDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'nz-skeleton-element',
                    host: {
                        '[class.ant-skeleton]': 'true',
                        '[class.ant-skeleton-element]': 'true',
                        '[class.ant-skeleton-active]': 'nzActive'
                    }
                },] }
    ];
    NzSkeletonElementDirective.propDecorators = {
        nzActive: [{ type: Input }],
        nzType: [{ type: Input }]
    };
    return NzSkeletonElementDirective;
}());
export { NzSkeletonElementDirective };
if (false) {
    /** @type {?} */
    NzSkeletonElementDirective.prototype.nzActive;
    /** @type {?} */
    NzSkeletonElementDirective.prototype.nzType;
}
var NzSkeletonElementButtonComponent = /** @class */ (function () {
    function NzSkeletonElementButtonComponent() {
        this.nzShape = 'default';
        this.nzSize = 'default';
    }
    NzSkeletonElementButtonComponent.decorators = [
        { type: Component, args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    selector: 'nz-skeleton-element[nzType="button"]',
                    template: "\n    <span\n      [class.ant-skeleton-button]=\"true\"\n      [class.ant-skeleton-button-round]=\"nzShape === 'round'\"\n      [class.ant-skeleton-button-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-button-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-button-sm]=\"nzSize === 'small'\"\n    >\n    </span>\n  "
                }] }
    ];
    NzSkeletonElementButtonComponent.propDecorators = {
        nzShape: [{ type: Input }],
        nzSize: [{ type: Input }]
    };
    return NzSkeletonElementButtonComponent;
}());
export { NzSkeletonElementButtonComponent };
if (false) {
    /** @type {?} */
    NzSkeletonElementButtonComponent.prototype.nzShape;
    /** @type {?} */
    NzSkeletonElementButtonComponent.prototype.nzSize;
}
var NzSkeletonElementAvatarComponent = /** @class */ (function () {
    function NzSkeletonElementAvatarComponent() {
        this.nzShape = 'circle';
        this.nzSize = 'default';
        this.styleMap = {};
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    NzSkeletonElementAvatarComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.nzSize && typeof this.nzSize === 'number') {
            /** @type {?} */
            var sideLength = this.nzSize + "px";
            this.styleMap = { width: sideLength, height: sideLength, 'line-height': sideLength };
        }
        else {
            this.styleMap = {};
        }
    };
    NzSkeletonElementAvatarComponent.decorators = [
        { type: Component, args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    selector: 'nz-skeleton-element[nzType="avatar"]',
                    template: "\n    <span\n      [class.ant-skeleton-avatar]=\"true\"\n      [class.ant-skeleton-avatar-square]=\"nzShape === 'square'\"\n      [class.ant-skeleton-avatar-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-avatar-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-avatar-sm]=\"nzSize === 'small'\"\n      [ngStyle]=\"styleMap\"\n    >\n    </span>\n  "
                }] }
    ];
    NzSkeletonElementAvatarComponent.propDecorators = {
        nzShape: [{ type: Input }],
        nzSize: [{ type: Input }]
    };
    return NzSkeletonElementAvatarComponent;
}());
export { NzSkeletonElementAvatarComponent };
if (false) {
    /** @type {?} */
    NzSkeletonElementAvatarComponent.ngAcceptInputType_nzShape;
    /** @type {?} */
    NzSkeletonElementAvatarComponent.ngAcceptInputType_AvatarSize;
    /** @type {?} */
    NzSkeletonElementAvatarComponent.prototype.nzShape;
    /** @type {?} */
    NzSkeletonElementAvatarComponent.prototype.nzSize;
    /** @type {?} */
    NzSkeletonElementAvatarComponent.prototype.styleMap;
}
var NzSkeletonElementInputComponent = /** @class */ (function () {
    function NzSkeletonElementInputComponent() {
        this.nzSize = 'default';
    }
    NzSkeletonElementInputComponent.decorators = [
        { type: Component, args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    selector: 'nz-skeleton-element[nzType="input"]',
                    template: "\n    <span\n      [class.ant-skeleton-input]=\"true\"\n      [class.ant-skeleton-input-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-input-sm]=\"nzSize === 'small'\"\n    >\n    </span>\n  "
                }] }
    ];
    NzSkeletonElementInputComponent.propDecorators = {
        nzSize: [{ type: Input }]
    };
    return NzSkeletonElementInputComponent;
}());
export { NzSkeletonElementInputComponent };
if (false) {
    /** @type {?} */
    NzSkeletonElementInputComponent.prototype.nzSize;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tlbGV0b24tZWxlbWVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkL3NrZWxldG9uLyIsInNvdXJjZXMiOlsic2tlbGV0b24tZWxlbWVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUE0QixNQUFNLGVBQWUsQ0FBQztBQVMvRztJQUFBO1FBU1csYUFBUSxHQUFZLEtBQUssQ0FBQztJQUVyQyxDQUFDOztnQkFYQSxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsSUFBSSxFQUFFO3dCQUNKLHNCQUFzQixFQUFFLE1BQU07d0JBQzlCLDhCQUE4QixFQUFFLE1BQU07d0JBQ3RDLDZCQUE2QixFQUFFLFVBQVU7cUJBQzFDO2lCQUNGOzs7MkJBRUUsS0FBSzt5QkFDTCxLQUFLOztJQUNSLGlDQUFDO0NBQUEsQUFYRCxJQVdDO1NBSFksMEJBQTBCOzs7SUFDckMsOENBQW1DOztJQUNuQyw0Q0FBZ0Q7O0FBR2xEO0lBQUE7UUFlVyxZQUFPLEdBQTBCLFNBQVMsQ0FBQztRQUMzQyxXQUFNLEdBQXlCLFNBQVMsQ0FBQztJQUNwRCxDQUFDOztnQkFqQkEsU0FBUyxTQUFDO29CQUNULGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxRQUFRLEVBQUUsc0NBQXNDO29CQUNoRCxRQUFRLEVBQUUsK1VBU1Q7aUJBQ0Y7OzswQkFFRSxLQUFLO3lCQUNMLEtBQUs7O0lBQ1IsdUNBQUM7Q0FBQSxBQWpCRCxJQWlCQztTQUhZLGdDQUFnQzs7O0lBQzNDLG1EQUFvRDs7SUFDcEQsa0RBQWtEOztBQUdwRDtJQUFBO1FBbUJXLFlBQU8sR0FBMEIsUUFBUSxDQUFDO1FBQzFDLFdBQU0sR0FBeUIsU0FBUyxDQUFDO1FBRWxELGFBQVEsR0FBRyxFQUFFLENBQUM7SUFVaEIsQ0FBQzs7Ozs7SUFSQyxzREFBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsSUFBSSxPQUFPLENBQUMsTUFBTSxJQUFJLE9BQU8sSUFBSSxDQUFDLE1BQU0sS0FBSyxRQUFRLEVBQUU7O2dCQUMvQyxVQUFVLEdBQU0sSUFBSSxDQUFDLE1BQU0sT0FBSTtZQUNyQyxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLGFBQWEsRUFBRSxVQUFVLEVBQUUsQ0FBQztTQUN0RjthQUFNO1lBQ0wsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7U0FDcEI7SUFDSCxDQUFDOztnQkEvQkYsU0FBUyxTQUFDO29CQUNULGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxRQUFRLEVBQUUsc0NBQXNDO29CQUNoRCxRQUFRLEVBQUUsK1dBVVQ7aUJBQ0Y7OzswQkFLRSxLQUFLO3lCQUNMLEtBQUs7O0lBWVIsdUNBQUM7Q0FBQSxBQWhDRCxJQWdDQztTQWpCWSxnQ0FBZ0M7OztJQUMzQywyREFBMkU7O0lBQzNFLDhEQUE2RTs7SUFFN0UsbURBQW1EOztJQUNuRCxrREFBa0Q7O0lBRWxELG9EQUFjOztBQVloQjtJQUFBO1FBYVcsV0FBTSxHQUF3QixTQUFTLENBQUM7SUFDbkQsQ0FBQzs7Z0JBZEEsU0FBUyxTQUFDO29CQUNULGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxRQUFRLEVBQUUscUNBQXFDO29CQUMvQyxRQUFRLEVBQUUsd01BT1Q7aUJBQ0Y7Ozt5QkFFRSxLQUFLOztJQUNSLHNDQUFDO0NBQUEsQUFkRCxJQWNDO1NBRlksK0JBQStCOzs7SUFDMUMsaURBQWlEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIERpcmVjdGl2ZSwgSW5wdXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgTnpTa2VsZXRvbkF2YXRhclNoYXBlLFxuICBOelNrZWxldG9uQXZhdGFyU2l6ZSxcbiAgTnpTa2VsZXRvbkJ1dHRvblNoYXBlLFxuICBOelNrZWxldG9uQnV0dG9uU2l6ZSxcbiAgTnpTa2VsZXRvbklucHV0U2l6ZVxufSBmcm9tICcuL3NrZWxldG9uLnR5cGUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICduei1za2VsZXRvbi1lbGVtZW50JyxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuYW50LXNrZWxldG9uXSc6ICd0cnVlJyxcbiAgICAnW2NsYXNzLmFudC1za2VsZXRvbi1lbGVtZW50XSc6ICd0cnVlJyxcbiAgICAnW2NsYXNzLmFudC1za2VsZXRvbi1hY3RpdmVdJzogJ256QWN0aXZlJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE56U2tlbGV0b25FbGVtZW50RGlyZWN0aXZlIHtcbiAgQElucHV0KCkgbnpBY3RpdmU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgbnpUeXBlITogJ2J1dHRvbicgfCAnaW5wdXQnIHwgJ2F2YXRhcic7XG59XG5cbkBDb21wb25lbnQoe1xuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc2VsZWN0b3I6ICduei1za2VsZXRvbi1lbGVtZW50W256VHlwZT1cImJ1dHRvblwiXScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHNwYW5cbiAgICAgIFtjbGFzcy5hbnQtc2tlbGV0b24tYnV0dG9uXT1cInRydWVcIlxuICAgICAgW2NsYXNzLmFudC1za2VsZXRvbi1idXR0b24tcm91bmRdPVwibnpTaGFwZSA9PT0gJ3JvdW5kJ1wiXG4gICAgICBbY2xhc3MuYW50LXNrZWxldG9uLWJ1dHRvbi1jaXJjbGVdPVwibnpTaGFwZSA9PT0gJ2NpcmNsZSdcIlxuICAgICAgW2NsYXNzLmFudC1za2VsZXRvbi1idXR0b24tbGddPVwibnpTaXplID09PSAnbGFyZ2UnXCJcbiAgICAgIFtjbGFzcy5hbnQtc2tlbGV0b24tYnV0dG9uLXNtXT1cIm56U2l6ZSA9PT0gJ3NtYWxsJ1wiXG4gICAgPlxuICAgIDwvc3Bhbj5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBOelNrZWxldG9uRWxlbWVudEJ1dHRvbkNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIG56U2hhcGU6IE56U2tlbGV0b25CdXR0b25TaGFwZSA9ICdkZWZhdWx0JztcbiAgQElucHV0KCkgbnpTaXplOiBOelNrZWxldG9uQnV0dG9uU2l6ZSA9ICdkZWZhdWx0Jztcbn1cblxuQENvbXBvbmVudCh7XG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzZWxlY3RvcjogJ256LXNrZWxldG9uLWVsZW1lbnRbbnpUeXBlPVwiYXZhdGFyXCJdJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8c3BhblxuICAgICAgW2NsYXNzLmFudC1za2VsZXRvbi1hdmF0YXJdPVwidHJ1ZVwiXG4gICAgICBbY2xhc3MuYW50LXNrZWxldG9uLWF2YXRhci1zcXVhcmVdPVwibnpTaGFwZSA9PT0gJ3NxdWFyZSdcIlxuICAgICAgW2NsYXNzLmFudC1za2VsZXRvbi1hdmF0YXItY2lyY2xlXT1cIm56U2hhcGUgPT09ICdjaXJjbGUnXCJcbiAgICAgIFtjbGFzcy5hbnQtc2tlbGV0b24tYXZhdGFyLWxnXT1cIm56U2l6ZSA9PT0gJ2xhcmdlJ1wiXG4gICAgICBbY2xhc3MuYW50LXNrZWxldG9uLWF2YXRhci1zbV09XCJuelNpemUgPT09ICdzbWFsbCdcIlxuICAgICAgW25nU3R5bGVdPVwic3R5bGVNYXBcIlxuICAgID5cbiAgICA8L3NwYW4+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgTnpTa2VsZXRvbkVsZW1lbnRBdmF0YXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpTaGFwZTogTnpTa2VsZXRvbkF2YXRhclNoYXBlIHwgdW5kZWZpbmVkIHwgbnVsbDtcbiAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX0F2YXRhclNpemU6IE56U2tlbGV0b25BdmF0YXJTaXplIHwgdW5kZWZpbmVkIHwgbnVsbDtcblxuICBASW5wdXQoKSBuelNoYXBlOiBOelNrZWxldG9uQXZhdGFyU2hhcGUgPSAnY2lyY2xlJztcbiAgQElucHV0KCkgbnpTaXplOiBOelNrZWxldG9uQXZhdGFyU2l6ZSA9ICdkZWZhdWx0JztcblxuICBzdHlsZU1hcCA9IHt9O1xuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoY2hhbmdlcy5uelNpemUgJiYgdHlwZW9mIHRoaXMubnpTaXplID09PSAnbnVtYmVyJykge1xuICAgICAgY29uc3Qgc2lkZUxlbmd0aCA9IGAke3RoaXMubnpTaXplfXB4YDtcbiAgICAgIHRoaXMuc3R5bGVNYXAgPSB7IHdpZHRoOiBzaWRlTGVuZ3RoLCBoZWlnaHQ6IHNpZGVMZW5ndGgsICdsaW5lLWhlaWdodCc6IHNpZGVMZW5ndGggfTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zdHlsZU1hcCA9IHt9O1xuICAgIH1cbiAgfVxufVxuXG5AQ29tcG9uZW50KHtcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHNlbGVjdG9yOiAnbnotc2tlbGV0b24tZWxlbWVudFtuelR5cGU9XCJpbnB1dFwiXScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHNwYW5cbiAgICAgIFtjbGFzcy5hbnQtc2tlbGV0b24taW5wdXRdPVwidHJ1ZVwiXG4gICAgICBbY2xhc3MuYW50LXNrZWxldG9uLWlucHV0LWxnXT1cIm56U2l6ZSA9PT0gJ2xhcmdlJ1wiXG4gICAgICBbY2xhc3MuYW50LXNrZWxldG9uLWlucHV0LXNtXT1cIm56U2l6ZSA9PT0gJ3NtYWxsJ1wiXG4gICAgPlxuICAgIDwvc3Bhbj5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBOelNrZWxldG9uRWxlbWVudElucHV0Q29tcG9uZW50IHtcbiAgQElucHV0KCkgbnpTaXplOiBOelNrZWxldG9uSW5wdXRTaXplID0gJ2RlZmF1bHQnO1xufVxuIl19