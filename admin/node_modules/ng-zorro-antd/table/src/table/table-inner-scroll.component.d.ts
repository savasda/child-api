/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Platform } from '@angular/cdk/platform';
import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';
import { AfterViewInit, ElementRef, NgZone, OnChanges, OnDestroy, Renderer2, SimpleChanges, TemplateRef, TrackByFunction } from '@angular/core';
import { NzResizeService } from 'ng-zorro-antd/core/services';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzTableData } from '../table.types';
import * as ɵngcc0 from '@angular/core';
export declare class NzTableInnerScrollComponent implements OnChanges, AfterViewInit, OnDestroy {
    private renderer;
    private ngZone;
    private platform;
    private resizeService;
    data: NzTableData[];
    scrollX: string | null;
    scrollY: string | null;
    contentTemplate: TemplateRef<NzSafeAny> | null;
    widthConfig: string[];
    listOfColWidth: Array<string | null>;
    theadTemplate: TemplateRef<NzSafeAny> | null;
    virtualTemplate: TemplateRef<NzSafeAny> | null;
    virtualItemSize: number;
    virtualMaxBufferPx: number;
    virtualMinBufferPx: number;
    tableMainElement?: HTMLDivElement;
    virtualForTrackBy: TrackByFunction<NzTableData>;
    tableHeaderElement: ElementRef;
    tableBodyElement: ElementRef;
    cdkVirtualScrollViewport?: CdkVirtualScrollViewport;
    headerStyleMap: {};
    bodyStyleMap: {};
    verticalScrollBarWidth: number;
    noDateVirtualHeight: string;
    private data$;
    private scroll$;
    private destroy$;
    setScrollPositionClassName(clear?: boolean): void;
    constructor(renderer: Renderer2, ngZone: NgZone, platform: Platform, resizeService: NzResizeService);
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTableInnerScrollComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTableInnerScrollComponent, "nz-table-inner-scroll", never, { "data": "data"; "scrollX": "scrollX"; "scrollY": "scrollY"; "contentTemplate": "contentTemplate"; "widthConfig": "widthConfig"; "listOfColWidth": "listOfColWidth"; "theadTemplate": "theadTemplate"; "virtualTemplate": "virtualTemplate"; "virtualItemSize": "virtualItemSize"; "virtualMaxBufferPx": "virtualMaxBufferPx"; "virtualMinBufferPx": "virtualMinBufferPx"; "virtualForTrackBy": "virtualForTrackBy"; "verticalScrollBarWidth": "verticalScrollBarWidth"; "tableMainElement": "tableMainElement"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtaW5uZXItc2Nyb2xsLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ0YWJsZS1pbm5lci1zY3JvbGwuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBbGliYWJhLmNvbSBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdAYW5ndWxhci9jZGsvcGxhdGZvcm0nO1xuaW1wb3J0IHsgQ2RrVmlydHVhbFNjcm9sbFZpZXdwb3J0IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3Njcm9sbGluZyc7XG5pbXBvcnQgeyBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBOZ1pvbmUsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBSZW5kZXJlcjIsIFNpbXBsZUNoYW5nZXMsIFRlbXBsYXRlUmVmLCBUcmFja0J5RnVuY3Rpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE56UmVzaXplU2VydmljZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS9zZXJ2aWNlcyc7XG5pbXBvcnQgeyBOelNhZmVBbnkgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHsgTnpUYWJsZURhdGEgfSBmcm9tICcuLi90YWJsZS50eXBlcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOelRhYmxlSW5uZXJTY3JvbGxDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBwcml2YXRlIHBsYXRmb3JtO1xuICAgIHByaXZhdGUgcmVzaXplU2VydmljZTtcbiAgICBkYXRhOiBOelRhYmxlRGF0YVtdO1xuICAgIHNjcm9sbFg6IHN0cmluZyB8IG51bGw7XG4gICAgc2Nyb2xsWTogc3RyaW5nIHwgbnVsbDtcbiAgICBjb250ZW50VGVtcGxhdGU6IFRlbXBsYXRlUmVmPE56U2FmZUFueT4gfCBudWxsO1xuICAgIHdpZHRoQ29uZmlnOiBzdHJpbmdbXTtcbiAgICBsaXN0T2ZDb2xXaWR0aDogQXJyYXk8c3RyaW5nIHwgbnVsbD47XG4gICAgdGhlYWRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8TnpTYWZlQW55PiB8IG51bGw7XG4gICAgdmlydHVhbFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxOelNhZmVBbnk+IHwgbnVsbDtcbiAgICB2aXJ0dWFsSXRlbVNpemU6IG51bWJlcjtcbiAgICB2aXJ0dWFsTWF4QnVmZmVyUHg6IG51bWJlcjtcbiAgICB2aXJ0dWFsTWluQnVmZmVyUHg6IG51bWJlcjtcbiAgICB0YWJsZU1haW5FbGVtZW50PzogSFRNTERpdkVsZW1lbnQ7XG4gICAgdmlydHVhbEZvclRyYWNrQnk6IFRyYWNrQnlGdW5jdGlvbjxOelRhYmxlRGF0YT47XG4gICAgdGFibGVIZWFkZXJFbGVtZW50OiBFbGVtZW50UmVmO1xuICAgIHRhYmxlQm9keUVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gICAgY2RrVmlydHVhbFNjcm9sbFZpZXdwb3J0PzogQ2RrVmlydHVhbFNjcm9sbFZpZXdwb3J0O1xuICAgIGhlYWRlclN0eWxlTWFwOiB7fTtcbiAgICBib2R5U3R5bGVNYXA6IHt9O1xuICAgIHZlcnRpY2FsU2Nyb2xsQmFyV2lkdGg6IG51bWJlcjtcbiAgICBub0RhdGVWaXJ0dWFsSGVpZ2h0OiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBkYXRhJDtcbiAgICBwcml2YXRlIHNjcm9sbCQ7XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICBzZXRTY3JvbGxQb3NpdGlvbkNsYXNzTmFtZShjbGVhcj86IGJvb2xlYW4pOiB2b2lkO1xuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIG5nWm9uZTogTmdab25lLCBwbGF0Zm9ybTogUGxhdGZvcm0sIHJlc2l6ZVNlcnZpY2U6IE56UmVzaXplU2VydmljZSk7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==