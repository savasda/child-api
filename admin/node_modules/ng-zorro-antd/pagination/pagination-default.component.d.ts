/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ElementRef, EventEmitter, OnChanges, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzPaginationItemComponent } from './pagination-item.component';
import { PaginationItemRenderContext } from './pagination.types';
import * as ɵngcc0 from '@angular/core';
export declare class NzPaginationDefaultComponent implements OnChanges {
    template: TemplateRef<NzSafeAny>;
    nzSize: 'default' | 'small';
    itemRender: TemplateRef<PaginationItemRenderContext> | null;
    showTotal: TemplateRef<{
        $implicit: number;
        range: [number, number];
    }> | null;
    disabled: boolean;
    locale: NzSafeAny;
    showSizeChanger: boolean;
    showQuickJumper: boolean;
    total: number;
    pageIndex: number;
    pageSize: number;
    pageSizeOptions: number[];
    readonly pageIndexChange: EventEmitter<number>;
    readonly pageSizeChange: EventEmitter<number>;
    ranges: number[];
    listOfPageItem: Array<Partial<NzPaginationItemComponent>>;
    constructor(renderer: Renderer2, elementRef: ElementRef);
    jumpPage(index: number): void;
    jumpDiff(diff: number): void;
    trackByPageItem(_: number, value: Partial<NzPaginationItemComponent>): string;
    onPageIndexChange(index: number): void;
    onPageSizeChange(size: number): void;
    getLastIndex(total: number, pageSize: number): number;
    buildIndexes(): void;
    getListOfPageItem(pageIndex: number, lastIndex: number): Array<Partial<NzPaginationItemComponent>>;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzPaginationDefaultComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzPaginationDefaultComponent, "nz-pagination-default", never, { "nzSize": "nzSize"; "itemRender": "itemRender"; "showTotal": "showTotal"; "disabled": "disabled"; "locale": "locale"; "showSizeChanger": "showSizeChanger"; "showQuickJumper": "showQuickJumper"; "total": "total"; "pageIndex": "pageIndex"; "pageSize": "pageSize"; "pageSizeOptions": "pageSizeOptions"; }, { "pageIndexChange": "pageIndexChange"; "pageSizeChange": "pageSizeChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi1kZWZhdWx0LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwYWdpbmF0aW9uLWRlZmF1bHQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgUmVuZGVyZXIyLCBTaW1wbGVDaGFuZ2VzLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IE56UGFnaW5hdGlvbkl0ZW1Db21wb25lbnQgfSBmcm9tICcuL3BhZ2luYXRpb24taXRlbS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGFnaW5hdGlvbkl0ZW1SZW5kZXJDb250ZXh0IH0gZnJvbSAnLi9wYWdpbmF0aW9uLnR5cGVzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56UGFnaW5hdGlvbkRlZmF1bHRDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxOelNhZmVBbnk+O1xuICAgIG56U2l6ZTogJ2RlZmF1bHQnIHwgJ3NtYWxsJztcbiAgICBpdGVtUmVuZGVyOiBUZW1wbGF0ZVJlZjxQYWdpbmF0aW9uSXRlbVJlbmRlckNvbnRleHQ+IHwgbnVsbDtcbiAgICBzaG93VG90YWw6IFRlbXBsYXRlUmVmPHtcbiAgICAgICAgJGltcGxpY2l0OiBudW1iZXI7XG4gICAgICAgIHJhbmdlOiBbbnVtYmVyLCBudW1iZXJdO1xuICAgIH0+IHwgbnVsbDtcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBsb2NhbGU6IE56U2FmZUFueTtcbiAgICBzaG93U2l6ZUNoYW5nZXI6IGJvb2xlYW47XG4gICAgc2hvd1F1aWNrSnVtcGVyOiBib29sZWFuO1xuICAgIHRvdGFsOiBudW1iZXI7XG4gICAgcGFnZUluZGV4OiBudW1iZXI7XG4gICAgcGFnZVNpemU6IG51bWJlcjtcbiAgICBwYWdlU2l6ZU9wdGlvbnM6IG51bWJlcltdO1xuICAgIHJlYWRvbmx5IHBhZ2VJbmRleENoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgcmVhZG9ubHkgcGFnZVNpemVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxudW1iZXI+O1xuICAgIHJhbmdlczogbnVtYmVyW107XG4gICAgbGlzdE9mUGFnZUl0ZW06IEFycmF5PFBhcnRpYWw8TnpQYWdpbmF0aW9uSXRlbUNvbXBvbmVudD4+O1xuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpO1xuICAgIGp1bXBQYWdlKGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIGp1bXBEaWZmKGRpZmY6IG51bWJlcik6IHZvaWQ7XG4gICAgdHJhY2tCeVBhZ2VJdGVtKF86IG51bWJlciwgdmFsdWU6IFBhcnRpYWw8TnpQYWdpbmF0aW9uSXRlbUNvbXBvbmVudD4pOiBzdHJpbmc7XG4gICAgb25QYWdlSW5kZXhDaGFuZ2UoaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgb25QYWdlU2l6ZUNoYW5nZShzaXplOiBudW1iZXIpOiB2b2lkO1xuICAgIGdldExhc3RJbmRleCh0b3RhbDogbnVtYmVyLCBwYWdlU2l6ZTogbnVtYmVyKTogbnVtYmVyO1xuICAgIGJ1aWxkSW5kZXhlcygpOiB2b2lkO1xuICAgIGdldExpc3RPZlBhZ2VJdGVtKHBhZ2VJbmRleDogbnVtYmVyLCBsYXN0SW5kZXg6IG51bWJlcik6IEFycmF5PFBhcnRpYWw8TnpQYWdpbmF0aW9uSXRlbUNvbXBvbmVudD4+O1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xufVxuIl19