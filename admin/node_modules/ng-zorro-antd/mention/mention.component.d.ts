/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Overlay } from '@angular/cdk/overlay';
import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';
import { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzMentionTriggerDirective } from './mention-trigger';
import { NzMentionService } from './mention.service';
import * as ɵngcc0 from '@angular/core';
export interface MentionOnSearchTypes {
    value: string;
    prefix: string;
}
export interface Mention {
    startPos: number;
    endPos: number;
    mention: string;
}
export declare type MentionPlacement = 'top' | 'bottom';
export declare class NzMentionComponent implements OnDestroy, OnInit, OnChanges {
    private ngDocument;
    private cdr;
    private overlay;
    private viewContainerRef;
    private nzMentionService;
    static ngAcceptInputType_nzLoading: BooleanInput;
    nzValueWith: (value: NzSafeAny) => string;
    nzPrefix: string | string[];
    nzLoading: boolean;
    nzNotFoundContent: string;
    nzPlacement: MentionPlacement;
    nzSuggestions: NzSafeAny[];
    readonly nzOnSelect: EventEmitter<NzSafeAny>;
    readonly nzOnSearchChange: EventEmitter<MentionOnSearchTypes>;
    trigger: NzMentionTriggerDirective;
    suggestionsTemp?: TemplateRef<void>;
    set suggestionChild(value: TemplateRef<{
        $implicit: NzSafeAny;
    }>);
    isOpen: boolean;
    filteredSuggestions: string[];
    suggestionTemplate: TemplateRef<{
        $implicit: NzSafeAny;
    }> | null;
    activeIndex: number;
    private previousValue;
    private cursorMention;
    private cursorMentionStart?;
    private cursorMentionEnd?;
    private overlayRef;
    private portal?;
    private positionStrategy;
    private overlayBackdropClickSubscription;
    private get triggerNativeElement();
    constructor(ngDocument: NzSafeAny, cdr: ChangeDetectorRef, overlay: Overlay, viewContainerRef: ViewContainerRef, nzMentionService: NzMentionService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    closeDropdown(): void;
    openDropdown(): void;
    getMentions(): string[];
    selectSuggestion(suggestion: string | {}): void;
    private handleInput;
    private handleKeydown;
    private handleClick;
    private bindTriggerEvents;
    private suggestionsFilter;
    private resetDropdown;
    private setNextItemActive;
    private setPreviousItemActive;
    private canOpen;
    private resetCursorMention;
    private updatePositions;
    private subscribeOverlayBackdropClick;
    private attachOverlay;
    private getOverlayConfig;
    private getOverlayPosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzMentionComponent, [{ optional: true; }, null, null, null, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzMentionComponent, "nz-mention", ["nzMention"], { "nzValueWith": "nzValueWith"; "nzPrefix": "nzPrefix"; "nzLoading": "nzLoading"; "nzNotFoundContent": "nzNotFoundContent"; "nzPlacement": "nzPlacement"; "nzSuggestions": "nzSuggestions"; }, { "nzOnSelect": "nzOnSelect"; "nzOnSearchChange": "nzOnSearchChange"; }, ["suggestionChild"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudGlvbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibWVudGlvbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IE92ZXJsYXkgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBUZW1wbGF0ZVJlZiwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQm9vbGVhbklucHV0LCBOelNhZmVBbnkgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHsgTnpNZW50aW9uVHJpZ2dlckRpcmVjdGl2ZSB9IGZyb20gJy4vbWVudGlvbi10cmlnZ2VyJztcbmltcG9ydCB7IE56TWVudGlvblNlcnZpY2UgfSBmcm9tICcuL21lbnRpb24uc2VydmljZSc7XG5leHBvcnQgaW50ZXJmYWNlIE1lbnRpb25PblNlYXJjaFR5cGVzIHtcbiAgICB2YWx1ZTogc3RyaW5nO1xuICAgIHByZWZpeDogc3RyaW5nO1xufVxuZXhwb3J0IGludGVyZmFjZSBNZW50aW9uIHtcbiAgICBzdGFydFBvczogbnVtYmVyO1xuICAgIGVuZFBvczogbnVtYmVyO1xuICAgIG1lbnRpb246IHN0cmluZztcbn1cbmV4cG9ydCBkZWNsYXJlIHR5cGUgTWVudGlvblBsYWNlbWVudCA9ICd0b3AnIHwgJ2JvdHRvbSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOek1lbnRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIG5nRG9jdW1lbnQ7XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgcHJpdmF0ZSBvdmVybGF5O1xuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lclJlZjtcbiAgICBwcml2YXRlIG56TWVudGlvblNlcnZpY2U7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256TG9hZGluZzogQm9vbGVhbklucHV0O1xuICAgIG56VmFsdWVXaXRoOiAodmFsdWU6IE56U2FmZUFueSkgPT4gc3RyaW5nO1xuICAgIG56UHJlZml4OiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgICBuekxvYWRpbmc6IGJvb2xlYW47XG4gICAgbnpOb3RGb3VuZENvbnRlbnQ6IHN0cmluZztcbiAgICBuelBsYWNlbWVudDogTWVudGlvblBsYWNlbWVudDtcbiAgICBuelN1Z2dlc3Rpb25zOiBOelNhZmVBbnlbXTtcbiAgICByZWFkb25seSBuek9uU2VsZWN0OiBFdmVudEVtaXR0ZXI8TnpTYWZlQW55PjtcbiAgICByZWFkb25seSBuek9uU2VhcmNoQ2hhbmdlOiBFdmVudEVtaXR0ZXI8TWVudGlvbk9uU2VhcmNoVHlwZXM+O1xuICAgIHRyaWdnZXI6IE56TWVudGlvblRyaWdnZXJEaXJlY3RpdmU7XG4gICAgc3VnZ2VzdGlvbnNUZW1wPzogVGVtcGxhdGVSZWY8dm9pZD47XG4gICAgc2V0IHN1Z2dlc3Rpb25DaGlsZCh2YWx1ZTogVGVtcGxhdGVSZWY8e1xuICAgICAgICAkaW1wbGljaXQ6IE56U2FmZUFueTtcbiAgICB9Pik7XG4gICAgaXNPcGVuOiBib29sZWFuO1xuICAgIGZpbHRlcmVkU3VnZ2VzdGlvbnM6IHN0cmluZ1tdO1xuICAgIHN1Z2dlc3Rpb25UZW1wbGF0ZTogVGVtcGxhdGVSZWY8e1xuICAgICAgICAkaW1wbGljaXQ6IE56U2FmZUFueTtcbiAgICB9PiB8IG51bGw7XG4gICAgYWN0aXZlSW5kZXg6IG51bWJlcjtcbiAgICBwcml2YXRlIHByZXZpb3VzVmFsdWU7XG4gICAgcHJpdmF0ZSBjdXJzb3JNZW50aW9uO1xuICAgIHByaXZhdGUgY3Vyc29yTWVudGlvblN0YXJ0PztcbiAgICBwcml2YXRlIGN1cnNvck1lbnRpb25FbmQ/O1xuICAgIHByaXZhdGUgb3ZlcmxheVJlZjtcbiAgICBwcml2YXRlIHBvcnRhbD87XG4gICAgcHJpdmF0ZSBwb3NpdGlvblN0cmF0ZWd5O1xuICAgIHByaXZhdGUgb3ZlcmxheUJhY2tkcm9wQ2xpY2tTdWJzY3JpcHRpb247XG4gICAgcHJpdmF0ZSBnZXQgdHJpZ2dlck5hdGl2ZUVsZW1lbnQoKTtcbiAgICBjb25zdHJ1Y3RvcihuZ0RvY3VtZW50OiBOelNhZmVBbnksIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIG92ZXJsYXk6IE92ZXJsYXksIHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYsIG56TWVudGlvblNlcnZpY2U6IE56TWVudGlvblNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBjbG9zZURyb3Bkb3duKCk6IHZvaWQ7XG4gICAgb3BlbkRyb3Bkb3duKCk6IHZvaWQ7XG4gICAgZ2V0TWVudGlvbnMoKTogc3RyaW5nW107XG4gICAgc2VsZWN0U3VnZ2VzdGlvbihzdWdnZXN0aW9uOiBzdHJpbmcgfCB7fSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBoYW5kbGVJbnB1dDtcbiAgICBwcml2YXRlIGhhbmRsZUtleWRvd247XG4gICAgcHJpdmF0ZSBoYW5kbGVDbGljaztcbiAgICBwcml2YXRlIGJpbmRUcmlnZ2VyRXZlbnRzO1xuICAgIHByaXZhdGUgc3VnZ2VzdGlvbnNGaWx0ZXI7XG4gICAgcHJpdmF0ZSByZXNldERyb3Bkb3duO1xuICAgIHByaXZhdGUgc2V0TmV4dEl0ZW1BY3RpdmU7XG4gICAgcHJpdmF0ZSBzZXRQcmV2aW91c0l0ZW1BY3RpdmU7XG4gICAgcHJpdmF0ZSBjYW5PcGVuO1xuICAgIHByaXZhdGUgcmVzZXRDdXJzb3JNZW50aW9uO1xuICAgIHByaXZhdGUgdXBkYXRlUG9zaXRpb25zO1xuICAgIHByaXZhdGUgc3Vic2NyaWJlT3ZlcmxheUJhY2tkcm9wQ2xpY2s7XG4gICAgcHJpdmF0ZSBhdHRhY2hPdmVybGF5O1xuICAgIHByaXZhdGUgZ2V0T3ZlcmxheUNvbmZpZztcbiAgICBwcml2YXRlIGdldE92ZXJsYXlQb3NpdGlvbjtcbn1cbiJdfQ==