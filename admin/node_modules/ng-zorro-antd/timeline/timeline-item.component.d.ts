/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { NzTimelineMode } from './timeline.component';
import { TimelineService } from './timeline.service';
import * as ɵngcc0 from '@angular/core';
declare const TimelineTimeDefaultColors: readonly ["red", "blue", "green", "grey", "gray"];
export declare type NzTimelineItemColor = typeof TimelineTimeDefaultColors[number];
export declare class NzTimelineItemComponent implements OnChanges {
    private cdr;
    private timelineService;
    template: TemplateRef<void>;
    nzColor: NzTimelineItemColor;
    nzDot?: string | TemplateRef<void>;
    isLast: boolean;
    borderColor: string | null;
    position: NzTimelineMode | undefined;
    constructor(cdr: ChangeDetectorRef, timelineService: TimelineService);
    ngOnChanges(changes: SimpleChanges): void;
    detectChanges(): void;
    private updateCustomColor;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTimelineItemComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTimelineItemComponent, "nz-timeline-item, [nz-timeline-item]", ["nzTimelineItem"], { "nzColor": "nzColor"; "nzDot": "nzDot"; }, {}, never, ["*"]>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZWxpbmUtaXRlbS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidGltZWxpbmUtaXRlbS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOelRpbWVsaW5lTW9kZSB9IGZyb20gJy4vdGltZWxpbmUuY29tcG9uZW50JztcbmltcG9ydCB7IFRpbWVsaW5lU2VydmljZSB9IGZyb20gJy4vdGltZWxpbmUuc2VydmljZSc7XG5kZWNsYXJlIGNvbnN0IFRpbWVsaW5lVGltZURlZmF1bHRDb2xvcnM6IHJlYWRvbmx5IFtcInJlZFwiLCBcImJsdWVcIiwgXCJncmVlblwiLCBcImdyZXlcIiwgXCJncmF5XCJdO1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBOelRpbWVsaW5lSXRlbUNvbG9yID0gdHlwZW9mIFRpbWVsaW5lVGltZURlZmF1bHRDb2xvcnNbbnVtYmVyXTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56VGltZWxpbmVJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIGNkcjtcbiAgICBwcml2YXRlIHRpbWVsaW5lU2VydmljZTtcbiAgICB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8dm9pZD47XG4gICAgbnpDb2xvcjogTnpUaW1lbGluZUl0ZW1Db2xvcjtcbiAgICBuekRvdD86IHN0cmluZyB8IFRlbXBsYXRlUmVmPHZvaWQ+O1xuICAgIGlzTGFzdDogYm9vbGVhbjtcbiAgICBib3JkZXJDb2xvcjogc3RyaW5nIHwgbnVsbDtcbiAgICBwb3NpdGlvbjogTnpUaW1lbGluZU1vZGUgfCB1bmRlZmluZWQ7XG4gICAgY29uc3RydWN0b3IoY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgdGltZWxpbmVTZXJ2aWNlOiBUaW1lbGluZVNlcnZpY2UpO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIGRldGVjdENoYW5nZXMoKTogdm9pZDtcbiAgICBwcml2YXRlIHVwZGF0ZUN1c3RvbUNvbG9yO1xufVxuZXhwb3J0IHt9O1xuIl19