{"version":3,"sources":["ng://ng-zorro-antd/timeline/timeline.service.ts","ng://ng-zorro-antd/timeline/timeline-item.component.ts","ng://ng-zorro-antd/timeline/timeline.component.ts","ng://ng-zorro-antd/timeline/timeline.module.ts"],"names":["TimelineService","this","check$","ReplaySubject","prototype","markForCheck","next","TimelineTimeDefaultColors","NzTimelineItemComponent","cdr","timelineService","nzColor","isLast","borderColor","ngOnChanges","changes","updateCustomColor","detectChanges","color","findIndex","i","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","preserveWhitespaces","selector","exportAs","template","ChangeDetectorRef","ViewChild","static","Input","NzTimelineComponent","nzReverse","isPendingBoolean","timelineItems","destroy$","Subject","nzMode","nzPending","simpleChangeActivated","updateChildren","currentValue","ngOnInit","_this","pipe","takeUntil","subscribe","ngAfterContentInit","listOfItems","ngOnDestroy","complete","length","length_1","forEach","item","index","position","undefined","toArray","reverse","providers","ContentChildren","simpleChange","previousValue","isFirstChange","NzTimelineModule","NgModule","declarations","exports","imports","CommonModule","PlatformModule","NzIconModule","NzOutletModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { ReplaySubject } from 'rxjs';\n\nexport class TimelineService {\n  check$ = new ReplaySubject(1);\n  markForCheck(): void {\n    this.check$.next();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzTimelineMode } from './timeline.component';\nimport { TimelineService } from './timeline.service';\n\nconst TimelineTimeDefaultColors = ['red', 'blue', 'green', 'grey', 'gray'] as const;\nexport type NzTimelineItemColor = typeof TimelineTimeDefaultColors[number];\n\nfunction isDefaultColor(color?: string): boolean {\n  return TimelineTimeDefaultColors.findIndex(i => i === color) !== -1;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline-item, [nz-timeline-item]',\n  exportAs: 'nzTimelineItem',\n  template: `\n    <ng-template #template>\n      <li\n        class=\"ant-timeline-item\"\n        [class.ant-timeline-item-right]=\"position === 'right'\"\n        [class.ant-timeline-item-left]=\"position === 'left'\"\n        [class.ant-timeline-item-last]=\"isLast\"\n      >\n        <div class=\"ant-timeline-item-tail\"></div>\n        <div\n          class=\"ant-timeline-item-head\"\n          [class.ant-timeline-item-head-red]=\"nzColor === 'red'\"\n          [class.ant-timeline-item-head-blue]=\"nzColor === 'blue'\"\n          [class.ant-timeline-item-head-green]=\"nzColor === 'green'\"\n          [class.ant-timeline-item-head-gray]=\"nzColor === 'gray'\"\n          [class.ant-timeline-item-head-custom]=\"!!nzDot\"\n          [style.border-color]=\"borderColor\"\n        >\n          <ng-container *nzStringTemplateOutlet=\"nzDot\">{{ nzDot }}</ng-container>\n        </div>\n        <div class=\"ant-timeline-item-content\">\n          <ng-content></ng-content>\n        </div>\n      </li>\n    </ng-template>\n  `\n})\nexport class NzTimelineItemComponent implements OnChanges {\n  @ViewChild('template', { static: false }) template!: TemplateRef<void>;\n\n  @Input() nzColor: NzTimelineItemColor = 'blue';\n  @Input() nzDot?: string | TemplateRef<void>;\n\n  isLast = false;\n  borderColor: string | null = null;\n  position: NzTimelineMode | undefined;\n\n  constructor(private cdr: ChangeDetectorRef, private timelineService: TimelineService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.timelineService.markForCheck();\n    if (changes.nzColor) {\n      this.updateCustomColor();\n    }\n  }\n\n  detectChanges(): void {\n    this.cdr.detectChanges();\n  }\n\n  private updateCustomColor(): void {\n    this.borderColor = isDefaultColor(this.nzColor) ? null : this.nzColor;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzTimelineItemComponent } from './timeline-item.component';\nimport { TimelineService } from './timeline.service';\n\nconst TimelineModes = ['left', 'alternate', 'right'] as const;\nexport type NzTimelineMode = typeof TimelineModes[number];\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline',\n  providers: [TimelineService],\n  exportAs: 'nzTimeline',\n  template: `\n    <ul\n      class=\"ant-timeline\"\n      [class.ant-timeline-right]=\"nzMode === 'right'\"\n      [class.ant-timeline-alternate]=\"nzMode === 'alternate'\"\n      [class.ant-timeline-pending]=\"!!nzPending\"\n      [class.ant-timeline-reverse]=\"nzReverse\"\n    >\n      <!-- User inserted timeline dots. -->\n      <ng-container *ngIf=\"nzReverse\" [ngTemplateOutlet]=\"pendingTemplate\"></ng-container>\n      <ng-container *ngFor=\"let item of timelineItems\">\n        <ng-template [ngTemplateOutlet]=\"item.template\"></ng-template>\n      </ng-container>\n      <ng-container *ngIf=\"!nzReverse\" [ngTemplateOutlet]=\"pendingTemplate\"></ng-container>\n      <!-- Pending dot. -->\n    </ul>\n    <ng-template #pendingTemplate>\n      <li *ngIf=\"nzPending\" class=\"ant-timeline-item ant-timeline-item-pending\">\n        <div class=\"ant-timeline-item-tail\"></div>\n        <div class=\"ant-timeline-item-head ant-timeline-item-head-custom ant-timeline-item-head-blue\">\n          <ng-container *nzStringTemplateOutlet=\"nzPendingDot\">\n            {{ nzPendingDot }}<i *ngIf=\"!nzPendingDot\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n        </div>\n        <div class=\"ant-timeline-item-content\">\n          <ng-container *nzStringTemplateOutlet=\"nzPending\">\n            {{ isPendingBoolean ? '' : nzPending }}\n          </ng-container>\n        </div>\n      </li>\n    </ng-template>\n    <!-- Grasp items -->\n    <ng-content></ng-content>\n  `\n})\nexport class NzTimelineComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {\n  @ContentChildren(NzTimelineItemComponent) listOfItems!: QueryList<NzTimelineItemComponent>;\n\n  @Input() nzMode?: NzTimelineMode;\n  @Input() nzPending?: string | boolean | TemplateRef<void>;\n  @Input() nzPendingDot?: string | TemplateRef<void>;\n  @Input() nzReverse: boolean = false;\n\n  isPendingBoolean: boolean = false;\n  timelineItems: NzTimelineItemComponent[] = [];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private cdr: ChangeDetectorRef, private timelineService: TimelineService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzMode, nzReverse, nzPending } = changes;\n\n    if (simpleChangeActivated(nzMode) || simpleChangeActivated(nzReverse)) {\n      this.updateChildren();\n    }\n\n    if (nzPending) {\n      this.isPendingBoolean = nzPending.currentValue === true;\n    }\n  }\n  ngOnInit(): void {\n    this.timelineService.check$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.updateChildren();\n\n    this.listOfItems.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.updateChildren();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateChildren(): void {\n    if (this.listOfItems && this.listOfItems.length) {\n      const length = this.listOfItems.length;\n      this.listOfItems.forEach((item, index) => {\n        item.isLast = !this.nzReverse ? index === length - 1 : index === 0;\n        item.position =\n          this.nzMode === 'left' || !this.nzMode\n            ? undefined\n            : this.nzMode === 'right'\n            ? 'right'\n            : this.nzMode === 'alternate' && index % 2 === 0\n            ? 'left'\n            : 'right';\n        item.detectChanges();\n      });\n      this.timelineItems = this.nzReverse ? this.listOfItems.toArray().reverse() : this.listOfItems.toArray();\n    }\n    this.cdr.markForCheck();\n  }\n}\n\nfunction simpleChangeActivated(simpleChange?: SimpleChange): boolean {\n  return !!(simpleChange && (simpleChange.previousValue !== simpleChange.currentValue || simpleChange.isFirstChange()));\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzTimelineItemComponent } from './timeline-item.component';\nimport { NzTimelineComponent } from './timeline.component';\n\n@NgModule({\n  declarations: [NzTimelineItemComponent, NzTimelineComponent],\n  exports: [NzTimelineItemComponent, NzTimelineComponent],\n  imports: [CommonModule, PlatformModule, NzIconModule, NzOutletModule]\n})\nexport class NzTimelineModule {}\n"]}