{"version":3,"sources":["./src/app/pages/programs/modal-add-program/modal-add-program.component.ts","./src/app/pages/programs/modal-add-program/modal-add-program.component.html","./src/app/pages/programs/modal-edit-program/modal-edit-program.component.ts","./src/app/pages/programs/programs.module.ts","./src/app/pages/programs/programs.routing.module.ts","./src/app/pages/programs/programs/programs.component.ts","./src/app/pages/programs/programs/programs.component.html"],"names":[],"mappings":"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","file":"pages-programs-programs-module-es2015.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { UploadFile } from 'ng-zorro-antd';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'modal-add-program',\n  templateUrl: './modal-add-program.component.html',\n  styleUrls: ['./modal-add-program.component.less']\n})\nexport class ModalAddProgram implements OnInit{\n  private env = environment;\n  url = `${this.env.api_host}/program/avatar`;\n  form: FormGroup;\n  private isDisabledFields = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient) {}\n\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  previewFile = (file: UploadFile) => {\n    return this.http\n      .post<{ thumbnail: string }>(`${this.env.api_host}/program/avatar`, {\n        method: 'POST',\n        body: file\n      })\n      .pipe(map(res => res.thumbnail));\n  };\n\n  initForm() {\n    this.form = this.fb.group({\n      caption: [{value: null, disabled: true}, Validators.required],\n      description: [{value: null, disabled: true}, Validators.required],\n      duration: [{value: 45, disabled: true}, Validators.required],\n      image: [null, Validators.required],\n    })\n  }\n\n  createTeacher() {\n    console.log(this.form.value)\n  }\n\n  handleChange(evt) {\n    if(evt.file.status == 'done') {\n      this.form.patchValue({image: evt.file.response.path}, {emitEvent: false});\n      for(const key in this.form.controls) {\n        this.form.controls[key].enable()\n      }\n    }\n  }\n}","\n\n\n<div nz-row>\n  <div nz-col nzSpan=\"24\">\n    <form [formGroup]=\"form\" nz-form>\n      <nz-form-item>\n        <nz-upload (nzChange)=\"handleChange($event)\" [nzAction]=\"url\" nzListType=\"picture\">\n          <button nz-button><i nz-icon nzType=\"upload\"></i>Загрузить ихображение для программы</button>\n        </nz-upload>\n      </nz-form-item>\n        \n      <nz-form-item>\n        <nz-form-label [nzSpan]=\"24\">Название программы</nz-form-label>\n        <nz-form-control nzHasFeedback [nzSpan]=\"24\" nzErrorTip=\"Поле обязательное для заполнения\">\n          <input formControlName=\"caption\" nz-input name=\"required\" required />\n        </nz-form-control>\n      </nz-form-item>\n\n      <nz-form-item>\n        <nz-form-label [nzSpan]=\"24\">Описание</nz-form-label>\n        <nz-form-control nzHasFeedback [nzSpan]=\"24\" nzErrorTip=\"Поле обязательное для заполнения\">\n          <input formControlName=\"description\" nz-input name=\"required\" required />\n        </nz-form-control>\n      </nz-form-item>\n\n      <nz-form-item>\n        <nz-form-label [nzSpan]=\"24\">Продолжительность занятия (мин)</nz-form-label>\n        <nz-form-control nzHasFeedback [nzSpan]=\"24\" nzErrorTip=\"Поле обязательное для заполнения\">\n          <input formControlName=\"duration\" nz-input name=\"required\" required />\n        </nz-form-control>\n      </nz-form-item>\n\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TeachersService } from 'src/app/services/teachers.service';\nimport { PaginateModel } from 'src/app/models/paginate.modal';\nimport { take } from 'rxjs/operators';\nimport { ResponseModal } from 'src/app/models/response.modal';\nimport { TeacherModel } from 'src/app/models/teacher.modal';\n\n@Component({\n  selector: 'modal-edit-program',\n  templateUrl: './modal-edit-program.component.html',\n  styleUrls: ['./modal-edit-program.component.less']\n})\nexport class ModalEditProgramComponent implements OnInit {\n  teachers: ResponseModal<TeacherModel>\n  constructor(private teachersService: TeachersService) {}\n\n  ngOnInit() {\n    this.getTeachers(new PaginateModel())\n  }\n\n  private getTeachers(data: PaginateModel) {\n    this.teachersService.get(data).pipe(take(1)).subscribe(data => this.teachers = data);\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProgramsRoutingModule } from './programs.routing.module';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NzInputModule } from 'ng-zorro-antd';\n\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { ProgramsComponent } from './programs/programs.component';\nimport { ModalAddProgram } from './modal-add-program/modal-add-program.component';\nimport { ModalEditProgramComponent } from './modal-edit-program/modal-edit-program.component';\n\n@NgModule({\n  declarations: [ProgramsComponent, ModalAddProgram, ModalEditProgramComponent],\n  imports: [\n    CommonModule,\n    ProgramsRoutingModule,\n    NzUploadModule,\n    NzButtonModule,\n    NzFormModule,\n    NzInputModule,\n    NzTableModule,\n    ReactiveFormsModule,\n    NzIconModule\n  ], \n  entryComponents: [ModalAddProgram, ModalEditProgramComponent]\n})\nexport class ProgramsModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProgramsComponent } from './programs/programs.component';\n\nconst routes: Routes = [\n  { path: '', component: ProgramsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProgramsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NzModalService, NzModalRef } from 'ng-zorro-antd';\nimport { ModalAddProgram } from '../modal-add-program/modal-add-program.component';\nimport { switchMap, map, filter, take } from 'rxjs/operators';\nimport { FormGroup } from '@angular/forms';\nimport { ProgramsService } from 'src/app/services/programs.service';\nimport { StoreService } from 'src/app/services/store.service';\nimport { PaginateModel, PaginatorInterface } from 'src/app/models/paginate.modal';\nimport { ModalEditProgramComponent } from '../modal-edit-program/modal-edit-program.component';\n\n@Component({\n  selector: 'app-programs',\n  templateUrl: './programs.component.html',\n  styleUrls: ['./programs.component.less']\n})\nexport class ProgramsComponent implements OnInit {\n  programs: any;\n  loading: boolean;\n\n\n constructor(\n   private storeService: StoreService,\n   private programService: ProgramsService,\n   private modalService: NzModalService) {}\n\n  ngOnInit(): void {\n   this.storeService.getPrograms().subscribe(pr => this.programs = pr);\n  }\n\n  onDelete(program) {\n    this.programService.delete(program.id).pipe(\n      switchMap(() => this.programService.getAll(new PaginateModel()))\n    ).subscribe(programs => this.storeService.setPrograms(programs))\n  }\n\n  onQueryParamsChange(params:PaginatorInterface) {\n    if(params.pageIndex === 0) return;\n    this.getPrograms(new PaginateModel(params));\n  }\n\n  getPrograms(pageData: PaginateModel ) {\n    this.loading = true;\n    this.programService.getAll(pageData).pipe(take(1)).subscribe(pr => {\n      this.programs = pr;\n      this.loading = false;\n    });\n  }\n\n  onAddNewProgram() {\n    const modalRef: NzModalRef = this.modalService.create({\n      nzTitle: 'Создать программу',\n      nzContent: ModalAddProgram,\n      nzFooter: [{\n        type: 'primary',\n        label: 'Создать',\n        onClick: () => {\n          this.programService.create(modalRef.getContentComponent().form.value)\n            .pipe(switchMap(() => this.programService.getAll(new PaginateModel())))\n            .subscribe(programs => {\n              this.storeService.setPrograms(programs);\n            }, err => new Error(err), () => modalRef.close())\n        }\n      }]\n    });\n  }\n\n  onEditProgram(program) {\n    const modalRef: NzModalRef = this.modalService.create({\n      nzTitle: 'Редактировать программу',\n      nzContent: ModalEditProgramComponent,\n      nzFooter: [{\n        type: 'primary',\n        label: 'Создать',\n        onClick: () => {\n          // this.programService.create(modalRef.getContentComponent().form.value)\n          //   .pipe(switchMap(() => this.programService.getAll(new PaginateModel())))\n          //   .subscribe(programs => {\n          //     this.storeService.setPrograms(programs);\n          //   }, err => new Error(err), () => modalRef.close())\n        }\n      }]\n    });\n  }\n\n}\n","\n<div class=\"buttons\">\n  <button (click)=\"onAddNewProgram()\" nz-button nzType=\"primary\">\n    Создать программу\n  </button>  \n</div>\n\n<ng-container *ngIf=\"programs\">\n<nz-table #basicTable\n  nzShowSizeChanger\n  [nzData]=\"programs.data\"\n  [nzFrontPagination]=\"false\"\n  [nzLoading]=\"loading\"\n  [nzTotal]=\"programs.tottal\"\n  [nzPageSize]=\"10\"\n  [nzPageIndex]=\"0\"\n  (nzQueryParams)=\"onQueryParamsChange($event)\">\n  \n  <thead>\n    <tr>\n      <th>Название</th>\n      <th>Описание</th>\n      <th>Продолжительность (мин)</th>\n      <th>Изображение</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let program of basicTable.data\">\n      <td>{{program.caption}}</td>\n      <td>{{program.description}}</td>\n      <td>{{program.duration}}</td>\n      <td>\n        <img style=\"height: 70px; width: 70px;\" [src]=\"program.image\" alt=\"\">\n      </td>\n      <td>\n        <div nz-row nzJustify=\"end\" class=\"controls\">\n          <button (click)=onEditProgram(program) nz-button nzType=\"primary\"><i nz-icon nzType=\"edit\" nzTheme=\"outline\"></i></button>\n          <button (click)=\"onDelete(program)\" nz-button nzType=\"danger\"><i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i></button>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</nz-table>\n</ng-container>"],"sourceRoot":"webpack:///"}