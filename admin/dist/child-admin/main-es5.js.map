{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/modal-autorize.ts","webpack:///src/app/components/registraration/registration.component.ts","webpack:///src/app/components/registraration/registration.component.html","webpack:///src/app/icons-provider.module.ts","webpack:///src/app/models/paginate.modal.ts","webpack:///src/app/services/programs.service.ts","webpack:///src/app/services/store.service.ts","webpack:///src/app/shared/auth.interceptor.ts","webpack:///src/app/shared/auth.service.ts","webpack:///src/app/shared/http-errors.interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","loadChildren","m","ProgramsModule","WelcomeModule","TeachersModule","component","AppRoutingModule","forRoot","imports","AppComponent","programService","authenticationService","isCollapsed","whoami","subscribe","user","console","log","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","useValue","declarations","providers","bootstrap","ModalAutorize","_modalRef","_router","_fb","navigate","close","form","group","username","required","password","registerUser","template","styles","RegistrationComponent","router","notify","authService","valid","register","value","success","icons","IconsProviderModule","PaginateModel","data","skip","pageIndex","pageSize","toString","take","ProgramsService","httpClient","storeService","env","getAll","pipe","setPrograms","pageData","params","set","get","api_host","programs","forEach","element","image","post","providedIn","StoreService","teachers","next","asObservable","BasicAuthInterceptor","request","currentUser","currentUserValue","token","clone","setHeaders","authorization","handle","AuthenticationService","http","currentUserSubject","JSON","parse","localStorage","getItem","setItem","stringify","removeItem","name","ErrorInterceptor","modal","err","status","logout","location","reload","error","message","create","nzTitle","nzContent","nzFooter","type","label","onClick","componentInstance","login","statusText","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegistrationComponent } from './components/registraration/registration.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/welcome' },\n  { path: 'programs', loadChildren: () => import('./pages/programs/programs.module').then(m => m.ProgramsModule) },\n  { path: 'welcome', loadChildren: () => import('./pages/welcome/welcome.module').then(m => m.WelcomeModule) },\n  { path: 'teachers', loadChildren: () => import('./pages/teachers/teachers.module').then(m => m.TeachersModule) },\n  { path: 'registration', component: RegistrationComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './shared/auth.service';\nimport { ProgramsService } from './services/programs.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent implements OnInit {\n  isCollapsed = false;\n  constructor(\n    private programService: ProgramsService,\n    private authenticationService: AuthenticationService) {\n\n  }\n  ngOnInit(): void {\n    this.authenticationService.whoami().subscribe(user => {\n      console.log(user)\n    })\n  }\n}\n","<nz-layout class=\"app-layout\">\n  <nz-sider class=\"menu-sidebar\"\n            nzCollapsible\n            nzWidth=\"256px\"\n            nzBreakpoint=\"md\"\n            [(nzCollapsed)]=\"isCollapsed\"\n            [nzTrigger]=\"null\">\n    <div class=\"sidebar-logo\">\n      <a href=\"https://ng.ant.design/\" target=\"_blank\">\n        <img src=\"https://ng.ant.design/assets/img/logo.svg\" alt=\"logo\">\n        <h1>Child CMS</h1>\n      </a>\n    </div>\n    <ul nz-menu nzTheme=\"dark\" nzMode=\"inline\" [nzInlineCollapsed]=\"isCollapsed\">\n      <li nz-submenu nzOpen nzTitle=\"Dashboard\" nzIcon=\"dashboard\">\n        <ul>\n          <li nz-menu-item nzMatchRouter>\n            <a routerLink=\"/welcome\">Statistics</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </nz-sider>\n  <nz-layout>\n    <nz-header>\n      <div class=\"app-header\">\n        <span class=\"header-trigger\" (click)=\"isCollapsed = !isCollapsed\">\n            <i class=\"trigger\"\n               nz-icon\n               [nzType]=\"isCollapsed ? 'menu-unfold' : 'menu-fold'\"\n            ></i>\n        </span>\n      </div>\n    </nz-header>\n    <nz-content>\n      <div class=\"inner-content\">\n        <router-outlet></router-outlet>\n      </div>\n    </nz-content>\n  </nz-layout>\n</nz-layout>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IconsProviderModule } from './icons-provider.module';\nimport { NzLayoutModule } from 'ng-zorro-antd/layout';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\nimport { ru_RU } from 'ng-zorro-antd/i18n';\nimport { registerLocaleData } from '@angular/common';\nimport ru from '@angular/common/locales/ru';\nimport { BasicAuthInterceptor } from './shared/auth.interceptor';\nimport { ErrorInterceptor } from './shared/http-errors.interceptor';\nimport { ModalAutorize } from './components/modal-autorize';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzNotificationModule } from 'ng-zorro-antd/notification';\nimport { RegistrationComponent } from './components/registraration/registration.component';\nimport { RouterModule } from '@angular/router';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\n\nregisterLocaleData(ru);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ModalAutorize,\n    RegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    IconsProviderModule,\n    NzLayoutModule,\n    NzMenuModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NzModalModule,\n    NzInputModule,\n    NzFormModule,\n    NzNotificationModule,\n    RouterModule,\n    NzButtonModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: NZ_I18N, useValue: ru_RU },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NzModalRef } from 'ng-zorro-antd/modal';\n\n@Component({\n  template: `\n    <form [formGroup]=\"form\" nz-form>\n      <nz-form-item>\n      <nz-form-label [nzSpan]=\"5\">Login</nz-form-label>\n      <nz-form-control nzHasFeedback [nzSpan]=\"19\" nzErrorTip=\"Input is required\">\n        <input formControlName=\"username\" nz-input name=\"required\" required />\n      </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label [nzSpan]=\"5\">Password</nz-form-label>\n        <nz-form-control nzHasFeedback [nzSpan]=\"19\" nzErrorTip=\"Input is required\">\n          <input formControlName=\"password\" nz-input name=\"required\" required />\n        </nz-form-control>\n      </nz-form-item>\n      <div (click)=\"registerUser()\" class=\"register-user-link\">\n        <a>Register new user?</a>\n      </div>\n    </form>\n  `,\n  styles: [`\n    .register-user-link {\n      display: flex;\n      justify-content: flex-end;\n    }\n  `]\n})\nexport class ModalAutorize implements OnInit {\n  form: FormGroup;\n  \n  constructor(\n    private _modalRef: NzModalRef,\n    private _router: Router,\n    private _fb: FormBuilder) {}\n\n  registerUser() {\n    this._router.navigate(['/registration']);\n    this._modalRef.close();\n  }\n\n  ngOnInit() {\n    this.form = this._fb.group({\n      username: [null, Validators.required],\n      password: [null, Validators.required]\n    })\n  }\n}","import { Component } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/shared/auth.service';\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.less']\n})\nexport class RegistrationComponent {\n  form: FormGroup;\n  \n  constructor(\n    private router: Router,\n    private notify: NzNotificationService,\n    private authService: AuthenticationService,\n    private _fb: FormBuilder) {}\n\n  registerUser() {\n    if(this.form.valid) {\n      this.authService.register(this.form.value).subscribe(user => {\n        this.notify.success( `Helollo ${user.username}`, 'your account succesfuly registerred');\n        this.router.navigate(['welcome'])\n      })\n    }\n  }\n\n  ngOnInit() {\n    this.form = this._fb.group({\n      username: [null, Validators.required],\n      password: [null, Validators.required]\n    })\n  }\n}","\n\n<div nz-row>\n  <div nz-col nzSpan=\"8\" nzOffset=\"8\">\n    <form [formGroup]=\"form\" nz-form>\n      <nz-form-item>\n      <nz-form-label [nzSpan]=\"5\">Login</nz-form-label>\n      <nz-form-control nzHasFeedback [nzSpan]=\"19\" nzErrorTip=\"Input is required\">\n        <input formControlName=\"username\" nz-input name=\"required\" required />\n      </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label [nzSpan]=\"5\">Password</nz-form-label>\n        <nz-form-control nzHasFeedback [nzSpan]=\"19\" nzErrorTip=\"Input is required\">\n          <input formControlName=\"password\" nz-input name=\"required\" required />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-control [nzSpan]=\"19\" [nzOffset]=\"5\">\n          <button (click)=\"registerUser()\" style=\"width: 100%;\" nz-button nzType=\"primary\">Register</button>\n        </nz-form-control>\n\n      </nz-form-item>    \n    </form>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { NZ_ICONS, NzIconModule } from 'ng-zorro-antd/icon';\n\nimport {\n  MenuFoldOutline,\n  MenuUnfoldOutline,\n  FormOutline,\n  DashboardOutline\n} from '@ant-design/icons-angular/icons';\n\nconst icons = [MenuFoldOutline, MenuUnfoldOutline, DashboardOutline, FormOutline];\n\n@NgModule({\n  imports: [NzIconModule],\n  exports: [NzIconModule],\n  providers: [\n    { provide: NZ_ICONS, useValue: icons }\n  ]\n})\nexport class IconsProviderModule {\n}\n","export interface PaginatorInterface {\n  pageIndex: number;\n  pageSize: number;\n  sort: Array<{ key: string; value: 'ascend' | 'descend' | null }>;\n  filter: Array<{ key: string; value: any | any[] }>;\n}\n\nexport class PaginateModel {\n  skip: string;\n  take: string;\n\n  constructor(data?: PaginatorInterface) {\n    if(data) {\n      this.skip = ((data.pageIndex - 1) * data.pageSize).toString();\n      if(+this.skip < 0) this.skip = '0'\n      this.take = data.pageSize.toString();\n    } else {\n      this.skip = '0';\n      this.take = '10';\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { StoreService } from './store.service';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Program } from '../models/program.model';\nimport { take, map, tap } from 'rxjs/operators';\nimport { PaginateModel } from '../models/paginate.modal';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgramsService {\n  private env = environment;\n  constructor(\n    private httpClient: HttpClient,\n    private storeService: StoreService){\n      this.getAll(new PaginateModel()).pipe(take(1)).subscribe(data => this.storeService.setPrograms(data))\n    }\n\n    getAll(pageData: PaginateModel): Observable<Array<Program>> {\n      const params = new HttpParams()\n      .set('skip', pageData.skip)\n      .set('take', pageData.take)\n      \n\n      return this.httpClient.get<Array<Program>>(`${this.env.api_host}/program`, {params})\n        .pipe(map((programs: any) => {\n          programs.data.forEach(element => {\n            element.image = `${this.env.api_host}/${element.image}`\n          });\n          return programs;\n        }))\n    }\n\n    create(data: any): Observable<any> {\n      return this.httpClient.post<Array<Program>>(`${this.env.api_host}/program`, data)\n    }\n\n    delete(id: string) : Observable<any> {\n      return this.httpClient.delete(`${this.env.api_host}/program/${id}`)\n    }\n\n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Program } from '../models/program.model';\nimport { Teacher } from '../models/teacher.model';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StoreService {\n  private programs = new BehaviorSubject<Array<Program>>(null);\n  private teachers = new BehaviorSubject<Array<Teacher>>(null);\n\n  setPrograms(programs: Array<Program>) {\n    this.programs.next(programs)\n  }\n  setTeachers(teachers: Array<Teacher>) {\n    this.teachers.next(teachers);\n  }\n  getPrograms(): Observable<any> {\n    return this.programs.asObservable();\n  }\n  getTeachers(): Observable<Array<Teacher>> {\n    return this.teachers.asObservable();\n  }\n}","import { Injectable } from '@angular/core';import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { AuthenticationService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class BasicAuthInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with basic auth credentials if available\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: { \n                    authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n    private env = environment;\n\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    login(data: {username: string, password: string}) {\n        return this.http.post<any>(`${this.env.api_host}/auth/login`, data)\n            .pipe(map(user => {\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n    register(data: {username: string, password: string}) {\n      return this.http.post<any>(`${this.env.api_host}/auth/register`, data)\n        .pipe(map(user => {\n            localStorage.setItem('currentUser', JSON.stringify(user));\n            this.currentUserSubject.next(user);\n            return user;\n        }));\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n\n    whoami(name: string = '') {\n      return this.http.get(`${this.env.api_host}/auth/whoami`)\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationService } from './auth.service';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { ModalAutorize } from '../components/modal-autorize';\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(\n      private modal: NzModalService,\n      private authService: AuthenticationService,\n      private notify: NzNotificationService,\n      private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            if(err.status === 400) {\n              console.log(err)\n              this.notify.error('Error', err.error.message)\n            }\n\n            if (err.status === 403) {\n              const modal = this.modal.create({\n                nzTitle: 'You need to authorize or register',\n                nzContent: ModalAutorize,\n                nzFooter: [{\n                  type: 'primary',\n                  label: 'Enter',\n                  onClick: () => {\n                    if(modal.componentInstance.form.valid) {\n                      this.authService.login(modal.componentInstance.form.value).subscribe(user => {\n                        console.log(user)\n                        modal.close();\n                      })\n                    }\n                  }\n                }]\n              });\n\n              \n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_host: 'http://localhost:8080/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}