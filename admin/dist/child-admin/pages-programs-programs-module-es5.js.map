{"version":3,"sources":["webpack:///src/app/pages/programs/modal-add-program/modal-add-program.component.ts","webpack:///src/app/pages/programs/modal-add-program/modal-add-program.component.html","webpack:///src/app/pages/programs/modal-edit-program/modal-edit-program.component.ts","webpack:///src/app/pages/programs/programs.module.ts","webpack:///src/app/pages/programs/programs.routing.module.ts","webpack:///src/app/pages/programs/programs/programs.component.ts","webpack:///src/app/pages/programs/programs/programs.component.html"],"names":["ModalAddProgram","fb","http","env","url","api_host","isDisabledFields","previewFile","file","post","method","body","pipe","res","thumbnail","initForm","form","group","caption","value","disabled","required","description","duration","image","console","log","evt","status","patchValue","response","path","emitEvent","key","controls","enable","handleChange","selector","templateUrl","styleUrls","ModalEditProgramComponent","teachersService","getTeachers","data","get","subscribe","teachers","ProgramsModule","declarations","imports","entryComponents","routes","component","ProgramsRoutingModule","forChild","exports","ProgramsComponent","storeService","programService","modalService","getPrograms","pr","programs","program","id","getAll","setPrograms","params","pageIndex","pageData","loading","modalRef","create","nzTitle","nzContent","nzFooter","type","label","onClick","getContentComponent","err","Error","close","onAddNewProgram"],"mappings":"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","file":"pages-programs-programs-module-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { UploadFile } from 'ng-zorro-antd';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'modal-add-program',\n  templateUrl: './modal-add-program.component.html',\n  styleUrls: ['./modal-add-program.component.less']\n})\nexport class ModalAddProgram implements OnInit{\n  private env = environment;\n  url = `${this.env.api_host}/program/avatar`;\n  form: FormGroup;\n  private isDisabledFields = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient) {}\n\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  previewFile = (file: UploadFile) => {\n    return this.http\n      .post<{ thumbnail: string }>(`${this.env.api_host}/program/avatar`, {\n        method: 'POST',\n        body: file\n      })\n      .pipe(map(res => res.thumbnail));\n  };\n\n  initForm() {\n    this.form = this.fb.group({\n      caption: [{value: null, disabled: true}, Validators.required],\n      description: [{value: null, disabled: true}, Validators.required],\n      duration: [{value: 45, disabled: true}, Validators.required],\n      image: [null, Validators.required],\n    })\n  }\n\n  createTeacher() {\n    console.log(this.form.value)\n  }\n\n  handleChange(evt) {\n    if(evt.file.status == 'done') {\n      this.form.patchValue({image: evt.file.response.path}, {emitEvent: false});\n      for(const key in this.form.controls) {\n        this.form.controls[key].enable()\n      }\n    }\n  }\n}","\n\n\n<div nz-row>\n  <div nz-col nzSpan=\"24\">\n    <form [formGroup]=\"form\" nz-form>\n      <nz-form-item>\n        <nz-upload (nzChange)=\"handleChange($event)\" [nzAction]=\"url\" nzListType=\"picture\">\n          <button nz-button><i nz-icon nzType=\"upload\"></i>Загрузить ихображение для программы</button>\n        </nz-upload>\n      </nz-form-item>\n        \n      <nz-form-item>\n        <nz-form-label [nzSpan]=\"24\">Название программы</nz-form-label>\n        <nz-form-control nzHasFeedback [nzSpan]=\"24\" nzErrorTip=\"Поле обязательное для заполнения\">\n          <input formControlName=\"caption\" nz-input name=\"required\" required />\n        </nz-form-control>\n      </nz-form-item>\n\n      <nz-form-item>\n        <nz-form-label [nzSpan]=\"24\">Описание</nz-form-label>\n        <nz-form-control nzHasFeedback [nzSpan]=\"24\" nzErrorTip=\"Поле обязательное для заполнения\">\n          <input formControlName=\"description\" nz-input name=\"required\" required />\n        </nz-form-control>\n      </nz-form-item>\n\n      <nz-form-item>\n        <nz-form-label [nzSpan]=\"24\">Продолжительность занятия (мин)</nz-form-label>\n        <nz-form-control nzHasFeedback [nzSpan]=\"24\" nzErrorTip=\"Поле обязательное для заполнения\">\n          <input formControlName=\"duration\" nz-input name=\"required\" required />\n        </nz-form-control>\n      </nz-form-item>\n\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TeachersService } from 'src/app/services/teachers.service';\nimport { PaginateModel } from 'src/app/models/paginate.modal';\nimport { take } from 'rxjs/operators';\nimport { ResponseModal } from 'src/app/models/response.modal';\nimport { TeacherModel } from 'src/app/models/teacher.modal';\n\n@Component({\n  selector: 'modal-edit-program',\n  templateUrl: './modal-edit-program.component.html',\n  styleUrls: ['./modal-edit-program.component.less']\n})\nexport class ModalEditProgramComponent implements OnInit {\n  teachers: ResponseModal<TeacherModel>\n  constructor(private teachersService: TeachersService) {}\n\n  ngOnInit() {\n    this.getTeachers(new PaginateModel())\n  }\n\n  private getTeachers(data: PaginateModel) {\n    this.teachersService.get(data).pipe(take(1)).subscribe(data => this.teachers = data);\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProgramsRoutingModule } from './programs.routing.module';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NzInputModule } from 'ng-zorro-antd';\n\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { ProgramsComponent } from './programs/programs.component';\nimport { ModalAddProgram } from './modal-add-program/modal-add-program.component';\nimport { ModalEditProgramComponent } from './modal-edit-program/modal-edit-program.component';\n\n@NgModule({\n  declarations: [ProgramsComponent, ModalAddProgram, ModalEditProgramComponent],\n  imports: [\n    CommonModule,\n    ProgramsRoutingModule,\n    NzUploadModule,\n    NzButtonModule,\n    NzFormModule,\n    NzInputModule,\n    NzTableModule,\n    ReactiveFormsModule,\n    NzIconModule\n  ], \n  entryComponents: [ModalAddProgram, ModalEditProgramComponent]\n})\nexport class ProgramsModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProgramsComponent } from './programs/programs.component';\n\nconst routes: Routes = [\n  { path: '', component: ProgramsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProgramsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NzModalService, NzModalRef } from 'ng-zorro-antd';\nimport { ModalAddProgram } from '../modal-add-program/modal-add-program.component';\nimport { switchMap, map, filter, take } from 'rxjs/operators';\nimport { FormGroup } from '@angular/forms';\nimport { ProgramsService } from 'src/app/services/programs.service';\nimport { StoreService } from 'src/app/services/store.service';\nimport { PaginateModel, PaginatorInterface } from 'src/app/models/paginate.modal';\nimport { ModalEditProgramComponent } from '../modal-edit-program/modal-edit-program.component';\n\n@Component({\n  selector: 'app-programs',\n  templateUrl: './programs.component.html',\n  styleUrls: ['./programs.component.less']\n})\nexport class ProgramsComponent implements OnInit {\n  programs: any;\n  loading: boolean;\n\n\n constructor(\n   private storeService: StoreService,\n   private programService: ProgramsService,\n   private modalService: NzModalService) {}\n\n  ngOnInit(): void {\n   this.storeService.getPrograms().subscribe(pr => this.programs = pr);\n  }\n\n  onDelete(program) {\n    this.programService.delete(program.id).pipe(\n      switchMap(() => this.programService.getAll(new PaginateModel()))\n    ).subscribe(programs => this.storeService.setPrograms(programs))\n  }\n\n  onQueryParamsChange(params:PaginatorInterface) {\n    if(params.pageIndex === 0) return;\n    this.getPrograms(new PaginateModel(params));\n  }\n\n  getPrograms(pageData: PaginateModel ) {\n    this.loading = true;\n    this.programService.getAll(pageData).pipe(take(1)).subscribe(pr => {\n      this.programs = pr;\n      this.loading = false;\n    });\n  }\n\n  onAddNewProgram() {\n    const modalRef: NzModalRef = this.modalService.create({\n      nzTitle: 'Создать программу',\n      nzContent: ModalAddProgram,\n      nzFooter: [{\n        type: 'primary',\n        label: 'Создать',\n        onClick: () => {\n          this.programService.create(modalRef.getContentComponent().form.value)\n            .pipe(switchMap(() => this.programService.getAll(new PaginateModel())))\n            .subscribe(programs => {\n              this.storeService.setPrograms(programs);\n            }, err => new Error(err), () => modalRef.close())\n        }\n      }]\n    });\n  }\n\n  onEditProgram(program) {\n    const modalRef: NzModalRef = this.modalService.create({\n      nzTitle: 'Редактировать программу',\n      nzContent: ModalEditProgramComponent,\n      nzFooter: [{\n        type: 'primary',\n        label: 'Создать',\n        onClick: () => {\n          // this.programService.create(modalRef.getContentComponent().form.value)\n          //   .pipe(switchMap(() => this.programService.getAll(new PaginateModel())))\n          //   .subscribe(programs => {\n          //     this.storeService.setPrograms(programs);\n          //   }, err => new Error(err), () => modalRef.close())\n        }\n      }]\n    });\n  }\n\n}\n","\n<div class=\"buttons\">\n  <button (click)=\"onAddNewProgram()\" nz-button nzType=\"primary\">\n    Создать программу\n  </button>  \n</div>\n\n<ng-container *ngIf=\"programs\">\n<nz-table #basicTable\n  nzShowSizeChanger\n  [nzData]=\"programs.data\"\n  [nzFrontPagination]=\"false\"\n  [nzLoading]=\"loading\"\n  [nzTotal]=\"programs.tottal\"\n  [nzPageSize]=\"10\"\n  [nzPageIndex]=\"0\"\n  (nzQueryParams)=\"onQueryParamsChange($event)\">\n  \n  <thead>\n    <tr>\n      <th>Название</th>\n      <th>Описание</th>\n      <th>Продолжительность (мин)</th>\n      <th>Изображение</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let program of basicTable.data\">\n      <td>{{program.caption}}</td>\n      <td>{{program.description}}</td>\n      <td>{{program.duration}}</td>\n      <td>\n        <img style=\"height: 70px; width: 70px;\" [src]=\"program.image\" alt=\"\">\n      </td>\n      <td>\n        <div nz-row nzJustify=\"end\" class=\"controls\">\n          <button (click)=onEditProgram(program) nz-button nzType=\"primary\"><i nz-icon nzType=\"edit\" nzTheme=\"outline\"></i></button>\n          <button (click)=\"onDelete(program)\" nz-button nzType=\"danger\"><i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i></button>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</nz-table>\n</ng-container>"]}